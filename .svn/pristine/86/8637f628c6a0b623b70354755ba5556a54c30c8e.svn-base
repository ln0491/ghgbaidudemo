package com.ghg.tobacco.ui;

import android.content.Intent;
import android.text.TextUtils;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.baidu.mapapi.map.BitmapDescriptor;
import com.baidu.mapapi.map.BitmapDescriptorFactory;
import com.baidu.mapapi.map.Marker;
import com.baidu.mapapi.map.MarkerOptions;
import com.baidu.mapapi.map.OverlayOptions;
import com.baidu.mapapi.model.LatLng;
import com.ghg.tobacco.R;
import com.ghg.tobacco.base.BaseMapActivity;
import com.ghg.tobacco.bean.BusinessCompany;
import com.ghg.tobacco.bean.Industry;
import com.ghg.tobacco.custom_view.MapZoomImageView;
import com.ghg.tobacco.utils.PhoneUtils;
import com.ghg.tobacco.utils.ResUtils;
import com.ghg.tobacco.utils.WebUtils;

/**
 * 商业公司和工业公司黄页
 */
public class CompanyYellowPagesActivity extends BaseMapActivity implements BDLocationListener {

    private BusinessCompany mBusinessCompany;
    private TextView tvAddress, tvTel, tvEmail, tvWebsite, tvPostcode, tvCompanyInfor;

    private ImageView zoom_in, zoom_out, btn_location;
    private MapZoomImageView zoom;
    private LatLng mLocationLatLng;
    private boolean mMarkerIsAdd;
    private String tel;
    private String url;

    @Override
    public int bindLayout() {
        return R.layout.activity_province_company_yellow_pages;
    }

    @Override
    public void initView() {

        setBtnBack();
        tvAddress = findViewId(R.id.tv_address);
        tvTel = findViewId(R.id.tv_tel);
        tvEmail = findViewId(R.id.tv_email);
        tvWebsite = findViewId(R.id.tv_website);
        tvPostcode = findViewId(R.id.tv_postcode);
        tvCompanyInfor = findViewId(R.id.tv_company_infor);
        zoom_in = findViewId(R.id.zoom_in);
        zoom_out = findViewId(R.id.zoom_out);
        zoom = findViewId(R.id.zoom);
        mMapView = findViewId(R.id.mapView);
        btn_location = findViewId(R.id.btn_location);
        mBaiduMap = mMapView.getMap();
        zoom.setZoomInOut(zoom_in, zoom_out);
        initLocation(this);

        hideZoomControls();
        hideLogo();
    }

    @Override
    public void initListener() {
        tvWebsite.setOnClickListener(this);
        btn_location.setOnClickListener(this);
        tvTel.setOnClickListener(this);
        zoom.setOnClickListener(new MapZoomImageView.OnClickListener() {
            @Override
            public void zoomInClick() {
                zoomIn();
            }

            @Override
            public void zoomOutClick() {
                zoomOut();
            }
        });
    }

    @Override
    public void initData() {

        Intent intent = getIntent();
        int type = intent.getIntExtra("type", 1);
        String name = null;
        String fax = null;
        String address = null;
        String postcode = null;
        String longitude = null;
        String latitude = null;
        if (type == 1) {
            mBusinessCompany = (BusinessCompany) intent.getSerializableExtra("company");
            if (mBusinessCompany != null) {
                name = mBusinessCompany.name;
                fax = mBusinessCompany.fax;
                address = mBusinessCompany.address;
                postcode = mBusinessCompany.postcode;
                tel = mBusinessCompany.tell;
                url = mBusinessCompany.url;
                longitude = mBusinessCompany.longitude;
                latitude = mBusinessCompany.latitude;

            }
        } else {
            Industry mIndustry = (Industry) intent.getSerializableExtra("industry");
            name = mIndustry.name;
            fax = mIndustry.fax;
            address = mIndustry.address;
            postcode = mIndustry.postcode;
            tel = mIndustry.tell;
            url = mIndustry.url;
            longitude = mIndustry.longitude;
            latitude = mIndustry.latitude;
        }

        if (!TextUtils.isEmpty(name)) {
            setTitle(name);
            tvCompanyInfor.setText(String.format(ResUtils.getString(this, R.string.infor), name));
        }

        if (!TextUtils.isEmpty(address)) {
            tvAddress.setText(address);
        }
        if (!TextUtils.isEmpty(tel)) {
            tvTel.setText(tel);
        }
        if (!TextUtils.isEmpty(fax)) {
            tvEmail.setText(fax);
        }
        if (!TextUtils.isEmpty(url)) {
            tvWebsite.setText(fax);
        }
        if (!TextUtils.isEmpty(postcode)) {
            tvPostcode.setText(postcode);
        }

        if (!TextUtils.isEmpty(latitude) && !TextUtils.isEmpty(longitude)) {
            LatLng latLng = new LatLng(Double.parseDouble(latitude), Double.parseDouble(longitude));
            addLocationMark(latLng);
        }
    }

    @Override
    public void resume() {
    }

    @Override
    public void pause() {

    }

    @Override
    public void stop() {

    }

    @Override
    public void destroy() {

    }

    @Override
    public void onClick(View v) {

        switch (v.getId()) {
            case R.id.tv_website:

                if (!TextUtils.isEmpty(url)) {
                    WebUtils.openBrowser(CompanyYellowPagesActivity.this, url);
                }
                break;
            case R.id.btn_location:

                if (mLocationLatLng == null) {
                    if (!mLocationClient.isStarted()) {
                        Toast.makeText(CompanyYellowPagesActivity.this, "正在获取位置", Toast.LENGTH_SHORT).show();
                        mLocationClient.start();
                    }
                } else {
                    setMapCenter(mLocationLatLng,-1);
                }

                break;
            case R.id.tv_tel:
                    if (!TextUtils.isEmpty(tel)) {
                        PhoneUtils.toCallPhoneActivity(CompanyYellowPagesActivity.this, tel);
                    }

                break;
        }
    }


    /**
     * 公司位置标记
     */
    private void addLocationMark(LatLng latLng) {
        //定义Maker坐标点
        //构建Marker图标
        BitmapDescriptor bitmap = BitmapDescriptorFactory
                .fromResource(R.mipmap.location);
        //构建MarkerOption，用于在地图上添加Marker
        OverlayOptions option = new MarkerOptions()
                .position(latLng)
                .icon(bitmap);
        //在地图上添加Marker，并显示
        Marker marker = (Marker) mBaiduMap.addOverlay(option);
        setMapCenter(latLng,16);
//        setZoom(16);

    }

    @Override
    public void onReceiveLocation(BDLocation bdLocation) {

        if (bdLocation == null) {
            Toast.makeText(CompanyYellowPagesActivity.this, "定位失败", Toast.LENGTH_SHORT).show();
            return;
        }

        mLocationLatLng = new LatLng(bdLocation.getLatitude(), bdLocation.getLongitude());
        addLocationMark();

    }

    private void addLocationMark() {
        if (mMarkerIsAdd) {
            setMapCenter(mLocationLatLng,-1);
            return;
        }
        mMarkerIsAdd = true;
        //定义Maker坐标点
        //构建Marker图标
        BitmapDescriptor bitmap = BitmapDescriptorFactory
                .fromResource(R.mipmap.icon_geo);
        //构建MarkerOption，用于在地图上添加Marker
        OverlayOptions option = new MarkerOptions()
                .position(mLocationLatLng)
                .icon(bitmap);
        //在地图上添加Marker，并显示
        Marker marker = (Marker) mBaiduMap.addOverlay(option);
        setMapCenter(mLocationLatLng,-1);
    }
}
